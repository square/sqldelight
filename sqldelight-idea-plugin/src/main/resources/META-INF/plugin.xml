<idea-plugin>
  <id>com.squareup.sqldelight</id>
  <name>SQLDelight</name>
  <category>Custom Languages</category>
  <vendor url="https://github.com/square">Square, Inc.</vendor>
  <idea-version since-build="201"/>
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.java</depends>
  <depends>org.jetbrains.kotlin</depends>

  <description><![CDATA[
      Generates typesafe Kotlin APIs from SQL, and provides language
      features for SQL inside the IDE.
    ]]></description>

  <extensions defaultExtensionNs="com.intellij">
    <!-- File-type Factory -->
    <fileType name="SqlDelight"
        language="SqlDelight"
        implementationClass="com.squareup.sqldelight.core.lang.SqlDelightFileType"
        extensions="sq"
        fieldName="INSTANCE"/>

    <fileType name="SqlDelight Migration"
        language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.core.lang.MigrationFileType"
        extensions="sqm"
        fieldName="INSTANCE"/>

    <fileType name="SqlDelight Database"
        implementationClass="com.squareup.sqldelight.core.lang.DatabaseFileType"
        extensions="db"
        fieldName="INSTANCE"/>
    <fileType.fileViewProviderFactory
        filetype="SqlDelight Database"
        implementationClass="com.squareup.sqldelight.core.lang.DatabaseFileViewProviderFactory"/>

    <colorSettingsPage implementation="com.squareup.sqldelight.intellij.SqlDelightColorSettingsPage"/>

    <internalFileTemplate name="SqlDelight File"/>
    <internalFileTemplate name="SqlDelight Table"/>
    <internalFileTemplate name="SqlDelight Migration"/>

    <externalSystemTaskNotificationListener
        implementation="com.squareup.sqldelight.intellij.GradleSystemListener"/>

    <defaultLiveTemplates file="liveTemplates/SqlDelight.xml"/>
    <liveTemplateContext implementation="com.squareup.sqldelight.intellij.SqlDelightLiveTemplateContextType"/>

    <fileIconProvider implementation="com.squareup.sqldelight.intellij.SqlDelightFileIconProvider" />
    <errorHandler implementation="com.squareup.sqldelight.intellij.SqlDelightErrorHandler"/>

    <stubIndex implementation="com.alecstrong.sql.psi.core.psi.SchemaContributorIndexImpl"/>
    <stubElementTypeHolder class="com.alecstrong.sql.psi.core.psi.SqlTypes"/>
    <stubElementTypeHolder class="com.alecstrong.sql.psi.core.sqlite_3_18.psi.SqliteTypes"/>

    <annotator language="SqlDelight"
        implementationClass="com.alecstrong.sql.psi.core.SqlAnnotator"/>
    <annotator language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightClassNameElementAnnotator"/>
    <completion.contributor language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightClassCompletionContributor"/>
    <gotoDeclarationHandler
        implementation="com.squareup.sqldelight.intellij.SqlDelightGotoDeclarationHandler"/>
    <findUsagesHandlerFactory
        implementation="com.squareup.sqldelight.intellij.SqlDelightFindUsagesHandlerFactory"/>
    <renamePsiElementProcessor
        implementation="com.squareup.sqldelight.intellij.SqlDelightRenameProcessor"/>

    <lang.findUsagesProvider
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightFindUsagesProvider"
        language="SqlDelight"/>
    <lang.parserDefinition language="SqlDelight"
        implementationClass="com.squareup.sqldelight.core.lang.SqlDelightParserDefinition"/>
    <lang.syntaxHighlighterFactory language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightSyntaxHighlighterFactory"/>
    <lang.commenter language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCommenter"/>
    <lang.foldingBuilder language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightFoldingBuilder"/>
    <lang.psiStructureViewFactory language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightStructureViewFactory"/>
    <lang.braceMatcher language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightPairedBraceMatcher"/>
    <lang.refactoringSupport language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.SqlDelightRefactoringSupportProvider"/>
    <lang.importOptimizer language="SqlDelight"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightImportOptimizer"/>
    <lang.importOptimizer language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightImportOptimizer"/>

    <projectService serviceInterface="com.squareup.sqldelight.core.SqlDelightProjectService"
        serviceImplementation="com.squareup.sqldelight.intellij.ProjectService"/>
    <projectService
        serviceInterface="com.squareup.sqldelight.intellij.FileGeneratorService"
        serviceImplementation="com.squareup.sqldelight.intellij.FileGeneratorServiceImpl"/>
    <highlightVisitor implementation="com.squareup.sqldelight.intellij.lang.SqlDelightHighlightVisitor"/>
    <suggestedRefactoringSupport language="SqlDelight" implementationClass="com.squareup.sqldelight.intellij.refactoring.SqlDelightSuggestedRefactoringSupport"/>

    <!-- Migration Extensions -->
    <lang.syntaxHighlighterFactory language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightSyntaxHighlighterFactory"/>
    <lang.fileViewProviderFactory language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightFileViewProviderFactory"/>
    <lang.commenter language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCommenter"/>
    <lang.parserDefinition language="SqlDelightMigration"
        implementationClass="com.squareup.sqldelight.core.lang.MigrationParserDefinition"/>

    <intentionAction>
      <className>com.squareup.sqldelight.intellij.intentions.ExpandColumnNamesWildcardQuickFix</className>
      <category>SQLDelight</category>
    </intentionAction>
    <intentionAction>
      <className>com.squareup.sqldelight.intellij.intentions.IntroduceTableAliasIntention</className>
      <category>SQLDelight</category>
    </intentionAction>
    <intentionAction>
      <className>com.squareup.sqldelight.intellij.intentions.QualifyColumnNameIntention</className>
      <category>SQLDelight</category>
    </intentionAction>

    <copyPastePostProcessor
        implementation="com.squareup.sqldelight.intellij.SqlDelightCopyPasteProcessor"/>

    <localInspection
        enabledByDefault="true"
        language="SqlDelight"
        level="WARNING"
        implementationClass="com.squareup.sqldelight.intellij.inspections.UnusedImportInspection"
        displayName="Unused import inspection"
        groupName="Declaration redundancy"/>

    <localInspection
        enabledByDefault="true"
        language="SqlDelight"
        level="WARNING"
        runForWholeFile="true"
        implementationClass="com.squareup.sqldelight.intellij.inspections.UnusedQueryInspection"
        displayName="Unused query inspection"
        groupName="Declaration redundancy"/>

    <localInspection
        enabledByDefault="true"
        language="SqlDelight"
        level="WARNING"
        runForWholeFile="true"
        implementationClass="com.squareup.sqldelight.intellij.inspections.UnusedColumnInspection"
        displayName="Unused column inspection"
        groupName="Declaration redundancy"/>

    <localInspection
        enabledByDefault="true"
        language="SqlDelight"
        level="WARNING"
        implementationClass="com.squareup.sqldelight.intellij.inspections.MismatchJoinColumnInspection"
        displayName="Incorrect join column inspection"
        groupName="Declaration redundancy"/>

    <localInspection
        enabledByDefault="true"
        language="SqlDelight"
        level="WARNING"
        implementationClass="com.squareup.sqldelight.intellij.inspections.RedundantNullCheckInspection"
        displayName="Redundant null check inspection"
        groupName="Declaration redundancy"/>

    <codeInsight.parameterInfo language="SqlDelight" implementationClass="com.squareup.sqldelight.intellij.SqlDelightParameterInfoHandler"/>
    <codeInsight.parameterNameHints language="SqlDelight" implementationClass="com.squareup.sqldelight.intellij.SqlDelightInlayParameterHintsProvider"/>

    <liveTemplateMacro implementation="com.squareup.sqldelight.intellij.macro.DbColumnsMacro"/>
    <liveTemplateMacro implementation="com.squareup.sqldelight.intellij.macro.PkMacro"/>
  </extensions>

  <actions>
    <action id="SQDelight.CopyAsSqlite" class="com.squareup.sqldelight.intellij.actions.CopyAsSqliteAction" text="Copy as SQLite">
      <add-to-group group-id="CutCopyPasteGroup" anchor="after" relative-to-action="$Copy"/>
      <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="$Copy"/>
      <keyboard-shortcut keymap="Mac OS X" first-keystroke="control shift C"/>
    </action>
    <action id="SqlDelight.NewFile"
        class="com.squareup.sqldelight.intellij.actions.file.SqlDelightCreateFileAction">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
    </action>
    <action id="SQDelight.GenerateSelectAllQuery" class="com.squareup.sqldelight.intellij.actions.GenerateSelectAllQueryAction"
        text="Select All">
      <add-to-group group-id="GenerateGroup"/>
    </action>
    <action id="SQDelight.GenerateSelectByPrimaryKeyQuery" class="com.squareup.sqldelight.intellij.actions.GenerateSelectByPrimaryKeyQueryAction"
        text="Select By Primary Key">
      <add-to-group group-id="GenerateGroup"/>
    </action>
    <action id="SQDelight.InsertInto" class="com.squareup.sqldelight.intellij.actions.GenerateInsertIntoQueryAction"
        text="Insert Into">
      <add-to-group group-id="GenerateGroup"/>
    </action>
    <action id="SQDelight.UpdateByPrimaryKeyQuery" class="com.squareup.sqldelight.intellij.actions.GenerateUpdateByPrimaryKeyQueryAction"
        text="Update By Primary Key">
      <add-to-group group-id="GenerateGroup"/>
    </action>
    <action id="SQDelight.DeleteByPrimaryKeyQuery" class="com.squareup.sqldelight.intellij.actions.GenerateDeleteByPrimaryKeyQueryAction"
        text="Delete By Primary Key">
      <add-to-group group-id="GenerateGroup"/>
    </action>
  </actions>
</idea-plugin>
